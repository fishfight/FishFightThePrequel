on: [push, pull_request]

name: Compilation check

jobs:
  fmt:
    runs-on: ubuntu-latest
    name: Formatting
    steps:
      - uses: actions/checkout@v2
      - name: Check Rust formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  build:
    name: Build
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - { os: macos-latest, target: 'x86_64-apple-darwin' }
          - { os: windows-latest, target: 'x86_64-pc-windows-msvc' }
          - { os: ubuntu-latest, target: 'x86_64-pc-windows-gnu' }
        include:
          - os: ubuntu-latest
            packages: libx11-dev libxi-dev libgl1-mesa-dev  libasound2-dev

    steps:
      - uses: actions/checkout@v2
      - name: Install packages (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get -yq --no-install-suggests --no-install-recommends install ${{ matrix.packages }}
      - name: Cache Cargo dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
      - uses: actions-rs/cargo@v1
        with:
          command: check
          args: --target=${{ matrix.config.target }}
            
